<div class="row">
    <div class="col-md-12">
        <div class="jumbotron">

            <h1>PiCamCV-FSharp</h1>

            <h4>This project demonstrates the following technologies:</h4>

            <ol>
                <li>F#</li>
                <li>Emgu CV</li>
                <li>WebSockets (Alchemy WebSockets)</li>
                <li>ASP.NET</li>
            </ol>

            <h4>Start the associated WebSocket server in the PiCamServer project, and click on the Start/Stop button below to begin viewing Camera imaging.</h4>
        </div>
        
        
        <div class="text-center">
            <h3 class="text-center">Camera 1</h3>
            <p>Status: <span id="status"></span></p>
        </div>
        


        <div class="col-md-6 col-sm-6">

            <h4>Controls</h4>

            <div class="form-group">
                <label for="width">Width</label>
                <input type="text" id="width" class="form-control" placeholder="Width" />
            </div>

            <div class="form-group">
                <label for="width">Height</label>
                <input type="text" id="height" class="form-control" placeholder="Height" />
            </div>

            <div class="form-group">
                <label for="colour">Colour</label>
                <select id="colour" class="form-control">
                    <option value="0">Gray</option>
                    <option value="1">Bgr</option>
                    <option value="2">Bgra</option>
                    <option value="3">Hsv</option>
                    <option value="4">Hls</option>
                    <option value="5">Lab</option>
                    <option value="6">Luv</option>
                    <option value="7">Xyz</option>
                    <option value="8">Ycc</option>
                </select>
            </div>
            
            <a role="button" class="btn btn-default btn-large" id="startStopBtn">Start/Stop</a>
            <a role="button" id="submitBtn" class="btn btn-primary">Save settings</a>
        </div>

        <div class="col-md-6 col-sm-6">
            <img id="testImg" class="tmargin15" src="" />
        </div>

        
    </div>
    
    
</div>



@section Scripts {
    
    <script type="text/javascript" src="~/Scripts/alchemy-client.js"></script>
    
    <script type="text/javascript">

        $(document).ready(function () {
                        
            var running = false;
            var camera;
            var AlchemyServer;
                                    
            function Connect() {
                // If we're using the Flash fallback, we need Flash.
                if (!window.WebSocket && !swfobject.hasFlashPlayerVersion('10.0.0')) {
                    alert('Flash Player >= 10.0.0 is required.');
                    return;
                }

                // Set up the Alchemy client object
                AlchemyServer = new Alchemy({
                    //Server: '192.168.1.209',
                    Server: 'localhost',
                    Port: '81',
                    Action: 'chat',
                    DebugMode: true
                });

                console.log('Connecting...');
                $('#status').removeClass('offline').addClass('pending').text('Connecting...');

                AlchemyServer.Connected = function() {
                    $('#status').removeClass('pending').addClass('online').text('Connected...');
                    console.log('Connection established!');

                    if (!running) {
                        running = !running;
                    }                    
                };

                AlchemyServer.Disconnected = function () {
                    $('#status').removeClass('online').addClass('offline').text('Disconnected...');
                    console.log('Connection closed.');

                    if (running) {
                        running = !running;
                    }
                    
                };

                AlchemyServer.MessageReceived = function(event) {
                    ParseResponse(event.data);
                };

                AlchemyServer.Start();
            };
            
            function ParseResponse(response) {
                var data = JSON.parse(response);
                
                if (data.Type == "image") {
                    $('#testImg').attr('src', 'data:image/jpg;base64,' + data.Message)
                }
                else {
                    console.log("error: " + data.Message)
                }
                                
            }
            
            $('#submitBtn').click(function () {

                if (running) {
                    var height, width, colour;
                    
                    if($('#height').val()) {
                        height = $('#height').val();
                    }
                    else {
                        height = 300.0;
                    }
                    if ($('#width').val()) {
                        width = $('#width').val();
                    }
                    else {
                        width = 500.0;
                    }
                    if ($('#colour').val()) {
                        colour = $('#colour').val();
                    }
                    else {
                        colour = 1;
                    }
                                        
                    AlchemyServer.Send({ Status: "connect", Width: width, Height: height, Colour: colour });
                }

            })

            $('#startStopBtn').click(function () {                
                if(running)                    
                {
                    AlchemyServer.Send({ state: "disconnect" });
                }                    
                else
                {                  
                    Connect();                                        
                }                               
                
            })
            
        });

</script>

}
